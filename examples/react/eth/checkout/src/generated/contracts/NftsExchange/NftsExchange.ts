/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from 'ethers';
import type {FunctionFragment, Result, EventFragment} from '@ethersproject/abi';
import type {Listener, Provider} from '@ethersproject/providers';
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from '../../common';

export interface NftsExchangeInterface extends utils.Interface {
  functions: {
    'buyNftUsingEth(uint256)': FunctionFragment;
    'buyNftUsingEthWithToField(address,uint256)': FunctionFragment;
    'buyNftUsingUsdc(uint256)': FunctionFragment;
    'buyNftUsingUsdcWithToField(address,uint256)': FunctionFragment;
    'buyNftUsingWeth(uint256)': FunctionFragment;
    'buyNftUsingWethWithToField(address,uint256)': FunctionFragment;
    'changeAdmin(address)': FunctionFragment;
    'depositNft(uint256)': FunctionFragment;
    'ethBuyPrice()': FunctionFragment;
    'getAdmin()': FunctionFragment;
    'getContractVersion()': FunctionFragment;
    'initialize(address,address,address,address)': FunctionFragment;
    'onERC721Received(address,address,uint256,bytes)': FunctionFragment;
    'setBuyWithEthPrice(uint256)': FunctionFragment;
    'setBuyWithUsdcPrice(uint256)': FunctionFragment;
    'setNftCollection(address)': FunctionFragment;
    'setUsdcToken(address)': FunctionFragment;
    'setWethToken(address)': FunctionFragment;
    'usdcBuyPrice()': FunctionFragment;
    'usdcToken()': FunctionFragment;
    'wethBuyPrice()': FunctionFragment;
    'wethToken()': FunctionFragment;
    'withdrawAllEth(address)': FunctionFragment;
    'withdrawAllUsdc(address)': FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | 'buyNftUsingEth'
      | 'buyNftUsingEthWithToField'
      | 'buyNftUsingUsdc'
      | 'buyNftUsingUsdcWithToField'
      | 'buyNftUsingWeth'
      | 'buyNftUsingWethWithToField'
      | 'changeAdmin'
      | 'depositNft'
      | 'ethBuyPrice'
      | 'getAdmin'
      | 'getContractVersion'
      | 'initialize'
      | 'onERC721Received'
      | 'setBuyWithEthPrice'
      | 'setBuyWithUsdcPrice'
      | 'setNftCollection'
      | 'setUsdcToken'
      | 'setWethToken'
      | 'usdcBuyPrice'
      | 'usdcToken'
      | 'wethBuyPrice'
      | 'wethToken'
      | 'withdrawAllEth'
      | 'withdrawAllUsdc'
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: 'buyNftUsingEth',
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: 'buyNftUsingEthWithToField',
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: 'buyNftUsingUsdc',
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: 'buyNftUsingUsdcWithToField',
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: 'buyNftUsingWeth',
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: 'buyNftUsingWethWithToField',
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: 'changeAdmin',
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: 'depositNft',
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: 'ethBuyPrice',
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: 'getAdmin', values?: undefined): string;
  encodeFunctionData(
    functionFragment: 'getContractVersion',
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: 'initialize',
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: 'onERC721Received',
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BytesLike>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: 'setBuyWithEthPrice',
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: 'setBuyWithUsdcPrice',
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: 'setNftCollection',
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: 'setUsdcToken',
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: 'setWethToken',
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: 'usdcBuyPrice',
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: 'usdcToken', values?: undefined): string;
  encodeFunctionData(
    functionFragment: 'wethBuyPrice',
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: 'wethToken', values?: undefined): string;
  encodeFunctionData(
    functionFragment: 'withdrawAllEth',
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: 'withdrawAllUsdc',
    values: [PromiseOrValue<string>]
  ): string;

  decodeFunctionResult(
    functionFragment: 'buyNftUsingEth',
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: 'buyNftUsingEthWithToField',
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: 'buyNftUsingUsdc',
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: 'buyNftUsingUsdcWithToField',
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: 'buyNftUsingWeth',
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: 'buyNftUsingWethWithToField',
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: 'changeAdmin',
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: 'depositNft', data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: 'ethBuyPrice',
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: 'getAdmin', data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: 'getContractVersion',
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: 'initialize', data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: 'onERC721Received',
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: 'setBuyWithEthPrice',
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: 'setBuyWithUsdcPrice',
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: 'setNftCollection',
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: 'setUsdcToken',
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: 'setWethToken',
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: 'usdcBuyPrice',
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: 'usdcToken', data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: 'wethBuyPrice',
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: 'wethToken', data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: 'withdrawAllEth',
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: 'withdrawAllUsdc',
    data: BytesLike
  ): Result;

  events: {
    'Initialized(uint8)': EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: 'Initialized'): EventFragment;
}

export interface InitializedEventObject {
  version: number;
}
export type InitializedEvent = TypedEvent<[number], InitializedEventObject>;

export type InitializedEventFilter = TypedEventFilter<InitializedEvent>;

export interface NftsExchange extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: NftsExchangeInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    buyNftUsingEth(
      tokenId_: PromiseOrValue<BigNumberish>,
      overrides?: PayableOverrides & {from?: PromiseOrValue<string>}
    ): Promise<ContractTransaction>;

    buyNftUsingEthWithToField(
      to_: PromiseOrValue<string>,
      tokenId_: PromiseOrValue<BigNumberish>,
      overrides?: PayableOverrides & {from?: PromiseOrValue<string>}
    ): Promise<ContractTransaction>;

    buyNftUsingUsdc(
      tokenId_: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & {from?: PromiseOrValue<string>}
    ): Promise<ContractTransaction>;

    buyNftUsingUsdcWithToField(
      to_: PromiseOrValue<string>,
      tokenId_: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & {from?: PromiseOrValue<string>}
    ): Promise<ContractTransaction>;

    buyNftUsingWeth(
      tokenId_: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & {from?: PromiseOrValue<string>}
    ): Promise<ContractTransaction>;

    buyNftUsingWethWithToField(
      to_: PromiseOrValue<string>,
      tokenId_: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & {from?: PromiseOrValue<string>}
    ): Promise<ContractTransaction>;

    changeAdmin(
      newAdmin_: PromiseOrValue<string>,
      overrides?: Overrides & {from?: PromiseOrValue<string>}
    ): Promise<ContractTransaction>;

    depositNft(
      tokenId_: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & {from?: PromiseOrValue<string>}
    ): Promise<ContractTransaction>;

    ethBuyPrice(overrides?: CallOverrides): Promise<[BigNumber]>;

    getAdmin(overrides?: CallOverrides): Promise<[string]>;

    getContractVersion(overrides?: CallOverrides): Promise<[number]>;

    initialize(
      usdcToken_: PromiseOrValue<string>,
      owner_: PromiseOrValue<string>,
      nftToken_: PromiseOrValue<string>,
      wethToken_: PromiseOrValue<string>,
      overrides?: Overrides & {from?: PromiseOrValue<string>}
    ): Promise<ContractTransaction>;

    onERC721Received(
      operator: PromiseOrValue<string>,
      from: PromiseOrValue<string>,
      tokenId: PromiseOrValue<BigNumberish>,
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & {from?: PromiseOrValue<string>}
    ): Promise<ContractTransaction>;

    setBuyWithEthPrice(
      price_: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & {from?: PromiseOrValue<string>}
    ): Promise<ContractTransaction>;

    setBuyWithUsdcPrice(
      price_: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & {from?: PromiseOrValue<string>}
    ): Promise<ContractTransaction>;

    setNftCollection(
      nftToken_: PromiseOrValue<string>,
      overrides?: Overrides & {from?: PromiseOrValue<string>}
    ): Promise<ContractTransaction>;

    setUsdcToken(
      usdcToken_: PromiseOrValue<string>,
      overrides?: Overrides & {from?: PromiseOrValue<string>}
    ): Promise<ContractTransaction>;

    setWethToken(
      wethToken_: PromiseOrValue<string>,
      overrides?: Overrides & {from?: PromiseOrValue<string>}
    ): Promise<ContractTransaction>;

    usdcBuyPrice(overrides?: CallOverrides): Promise<[BigNumber]>;

    usdcToken(overrides?: CallOverrides): Promise<[string]>;

    wethBuyPrice(overrides?: CallOverrides): Promise<[BigNumber]>;

    wethToken(overrides?: CallOverrides): Promise<[string]>;

    withdrawAllEth(
      to_: PromiseOrValue<string>,
      overrides?: Overrides & {from?: PromiseOrValue<string>}
    ): Promise<ContractTransaction>;

    withdrawAllUsdc(
      to_: PromiseOrValue<string>,
      overrides?: Overrides & {from?: PromiseOrValue<string>}
    ): Promise<ContractTransaction>;
  };

  buyNftUsingEth(
    tokenId_: PromiseOrValue<BigNumberish>,
    overrides?: PayableOverrides & {from?: PromiseOrValue<string>}
  ): Promise<ContractTransaction>;

  buyNftUsingEthWithToField(
    to_: PromiseOrValue<string>,
    tokenId_: PromiseOrValue<BigNumberish>,
    overrides?: PayableOverrides & {from?: PromiseOrValue<string>}
  ): Promise<ContractTransaction>;

  buyNftUsingUsdc(
    tokenId_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & {from?: PromiseOrValue<string>}
  ): Promise<ContractTransaction>;

  buyNftUsingUsdcWithToField(
    to_: PromiseOrValue<string>,
    tokenId_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & {from?: PromiseOrValue<string>}
  ): Promise<ContractTransaction>;

  buyNftUsingWeth(
    tokenId_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & {from?: PromiseOrValue<string>}
  ): Promise<ContractTransaction>;

  buyNftUsingWethWithToField(
    to_: PromiseOrValue<string>,
    tokenId_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & {from?: PromiseOrValue<string>}
  ): Promise<ContractTransaction>;

  changeAdmin(
    newAdmin_: PromiseOrValue<string>,
    overrides?: Overrides & {from?: PromiseOrValue<string>}
  ): Promise<ContractTransaction>;

  depositNft(
    tokenId_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & {from?: PromiseOrValue<string>}
  ): Promise<ContractTransaction>;

  ethBuyPrice(overrides?: CallOverrides): Promise<BigNumber>;

  getAdmin(overrides?: CallOverrides): Promise<string>;

  getContractVersion(overrides?: CallOverrides): Promise<number>;

  initialize(
    usdcToken_: PromiseOrValue<string>,
    owner_: PromiseOrValue<string>,
    nftToken_: PromiseOrValue<string>,
    wethToken_: PromiseOrValue<string>,
    overrides?: Overrides & {from?: PromiseOrValue<string>}
  ): Promise<ContractTransaction>;

  onERC721Received(
    operator: PromiseOrValue<string>,
    from: PromiseOrValue<string>,
    tokenId: PromiseOrValue<BigNumberish>,
    data: PromiseOrValue<BytesLike>,
    overrides?: Overrides & {from?: PromiseOrValue<string>}
  ): Promise<ContractTransaction>;

  setBuyWithEthPrice(
    price_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & {from?: PromiseOrValue<string>}
  ): Promise<ContractTransaction>;

  setBuyWithUsdcPrice(
    price_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & {from?: PromiseOrValue<string>}
  ): Promise<ContractTransaction>;

  setNftCollection(
    nftToken_: PromiseOrValue<string>,
    overrides?: Overrides & {from?: PromiseOrValue<string>}
  ): Promise<ContractTransaction>;

  setUsdcToken(
    usdcToken_: PromiseOrValue<string>,
    overrides?: Overrides & {from?: PromiseOrValue<string>}
  ): Promise<ContractTransaction>;

  setWethToken(
    wethToken_: PromiseOrValue<string>,
    overrides?: Overrides & {from?: PromiseOrValue<string>}
  ): Promise<ContractTransaction>;

  usdcBuyPrice(overrides?: CallOverrides): Promise<BigNumber>;

  usdcToken(overrides?: CallOverrides): Promise<string>;

  wethBuyPrice(overrides?: CallOverrides): Promise<BigNumber>;

  wethToken(overrides?: CallOverrides): Promise<string>;

  withdrawAllEth(
    to_: PromiseOrValue<string>,
    overrides?: Overrides & {from?: PromiseOrValue<string>}
  ): Promise<ContractTransaction>;

  withdrawAllUsdc(
    to_: PromiseOrValue<string>,
    overrides?: Overrides & {from?: PromiseOrValue<string>}
  ): Promise<ContractTransaction>;

  callStatic: {
    buyNftUsingEth(
      tokenId_: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    buyNftUsingEthWithToField(
      to_: PromiseOrValue<string>,
      tokenId_: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    buyNftUsingUsdc(
      tokenId_: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    buyNftUsingUsdcWithToField(
      to_: PromiseOrValue<string>,
      tokenId_: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    buyNftUsingWeth(
      tokenId_: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    buyNftUsingWethWithToField(
      to_: PromiseOrValue<string>,
      tokenId_: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    changeAdmin(
      newAdmin_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    depositNft(
      tokenId_: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    ethBuyPrice(overrides?: CallOverrides): Promise<BigNumber>;

    getAdmin(overrides?: CallOverrides): Promise<string>;

    getContractVersion(overrides?: CallOverrides): Promise<number>;

    initialize(
      usdcToken_: PromiseOrValue<string>,
      owner_: PromiseOrValue<string>,
      nftToken_: PromiseOrValue<string>,
      wethToken_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    onERC721Received(
      operator: PromiseOrValue<string>,
      from: PromiseOrValue<string>,
      tokenId: PromiseOrValue<BigNumberish>,
      data: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<string>;

    setBuyWithEthPrice(
      price_: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    setBuyWithUsdcPrice(
      price_: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    setNftCollection(
      nftToken_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    setUsdcToken(
      usdcToken_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    setWethToken(
      wethToken_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    usdcBuyPrice(overrides?: CallOverrides): Promise<BigNumber>;

    usdcToken(overrides?: CallOverrides): Promise<string>;

    wethBuyPrice(overrides?: CallOverrides): Promise<BigNumber>;

    wethToken(overrides?: CallOverrides): Promise<string>;

    withdrawAllEth(
      to_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    withdrawAllUsdc(
      to_: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    'Initialized(uint8)'(version?: null): InitializedEventFilter;
    Initialized(version?: null): InitializedEventFilter;
  };

  estimateGas: {
    buyNftUsingEth(
      tokenId_: PromiseOrValue<BigNumberish>,
      overrides?: PayableOverrides & {from?: PromiseOrValue<string>}
    ): Promise<BigNumber>;

    buyNftUsingEthWithToField(
      to_: PromiseOrValue<string>,
      tokenId_: PromiseOrValue<BigNumberish>,
      overrides?: PayableOverrides & {from?: PromiseOrValue<string>}
    ): Promise<BigNumber>;

    buyNftUsingUsdc(
      tokenId_: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & {from?: PromiseOrValue<string>}
    ): Promise<BigNumber>;

    buyNftUsingUsdcWithToField(
      to_: PromiseOrValue<string>,
      tokenId_: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & {from?: PromiseOrValue<string>}
    ): Promise<BigNumber>;

    buyNftUsingWeth(
      tokenId_: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & {from?: PromiseOrValue<string>}
    ): Promise<BigNumber>;

    buyNftUsingWethWithToField(
      to_: PromiseOrValue<string>,
      tokenId_: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & {from?: PromiseOrValue<string>}
    ): Promise<BigNumber>;

    changeAdmin(
      newAdmin_: PromiseOrValue<string>,
      overrides?: Overrides & {from?: PromiseOrValue<string>}
    ): Promise<BigNumber>;

    depositNft(
      tokenId_: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & {from?: PromiseOrValue<string>}
    ): Promise<BigNumber>;

    ethBuyPrice(overrides?: CallOverrides): Promise<BigNumber>;

    getAdmin(overrides?: CallOverrides): Promise<BigNumber>;

    getContractVersion(overrides?: CallOverrides): Promise<BigNumber>;

    initialize(
      usdcToken_: PromiseOrValue<string>,
      owner_: PromiseOrValue<string>,
      nftToken_: PromiseOrValue<string>,
      wethToken_: PromiseOrValue<string>,
      overrides?: Overrides & {from?: PromiseOrValue<string>}
    ): Promise<BigNumber>;

    onERC721Received(
      operator: PromiseOrValue<string>,
      from: PromiseOrValue<string>,
      tokenId: PromiseOrValue<BigNumberish>,
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & {from?: PromiseOrValue<string>}
    ): Promise<BigNumber>;

    setBuyWithEthPrice(
      price_: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & {from?: PromiseOrValue<string>}
    ): Promise<BigNumber>;

    setBuyWithUsdcPrice(
      price_: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & {from?: PromiseOrValue<string>}
    ): Promise<BigNumber>;

    setNftCollection(
      nftToken_: PromiseOrValue<string>,
      overrides?: Overrides & {from?: PromiseOrValue<string>}
    ): Promise<BigNumber>;

    setUsdcToken(
      usdcToken_: PromiseOrValue<string>,
      overrides?: Overrides & {from?: PromiseOrValue<string>}
    ): Promise<BigNumber>;

    setWethToken(
      wethToken_: PromiseOrValue<string>,
      overrides?: Overrides & {from?: PromiseOrValue<string>}
    ): Promise<BigNumber>;

    usdcBuyPrice(overrides?: CallOverrides): Promise<BigNumber>;

    usdcToken(overrides?: CallOverrides): Promise<BigNumber>;

    wethBuyPrice(overrides?: CallOverrides): Promise<BigNumber>;

    wethToken(overrides?: CallOverrides): Promise<BigNumber>;

    withdrawAllEth(
      to_: PromiseOrValue<string>,
      overrides?: Overrides & {from?: PromiseOrValue<string>}
    ): Promise<BigNumber>;

    withdrawAllUsdc(
      to_: PromiseOrValue<string>,
      overrides?: Overrides & {from?: PromiseOrValue<string>}
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    buyNftUsingEth(
      tokenId_: PromiseOrValue<BigNumberish>,
      overrides?: PayableOverrides & {from?: PromiseOrValue<string>}
    ): Promise<PopulatedTransaction>;

    buyNftUsingEthWithToField(
      to_: PromiseOrValue<string>,
      tokenId_: PromiseOrValue<BigNumberish>,
      overrides?: PayableOverrides & {from?: PromiseOrValue<string>}
    ): Promise<PopulatedTransaction>;

    buyNftUsingUsdc(
      tokenId_: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & {from?: PromiseOrValue<string>}
    ): Promise<PopulatedTransaction>;

    buyNftUsingUsdcWithToField(
      to_: PromiseOrValue<string>,
      tokenId_: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & {from?: PromiseOrValue<string>}
    ): Promise<PopulatedTransaction>;

    buyNftUsingWeth(
      tokenId_: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & {from?: PromiseOrValue<string>}
    ): Promise<PopulatedTransaction>;

    buyNftUsingWethWithToField(
      to_: PromiseOrValue<string>,
      tokenId_: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & {from?: PromiseOrValue<string>}
    ): Promise<PopulatedTransaction>;

    changeAdmin(
      newAdmin_: PromiseOrValue<string>,
      overrides?: Overrides & {from?: PromiseOrValue<string>}
    ): Promise<PopulatedTransaction>;

    depositNft(
      tokenId_: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & {from?: PromiseOrValue<string>}
    ): Promise<PopulatedTransaction>;

    ethBuyPrice(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getAdmin(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getContractVersion(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    initialize(
      usdcToken_: PromiseOrValue<string>,
      owner_: PromiseOrValue<string>,
      nftToken_: PromiseOrValue<string>,
      wethToken_: PromiseOrValue<string>,
      overrides?: Overrides & {from?: PromiseOrValue<string>}
    ): Promise<PopulatedTransaction>;

    onERC721Received(
      operator: PromiseOrValue<string>,
      from: PromiseOrValue<string>,
      tokenId: PromiseOrValue<BigNumberish>,
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & {from?: PromiseOrValue<string>}
    ): Promise<PopulatedTransaction>;

    setBuyWithEthPrice(
      price_: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & {from?: PromiseOrValue<string>}
    ): Promise<PopulatedTransaction>;

    setBuyWithUsdcPrice(
      price_: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & {from?: PromiseOrValue<string>}
    ): Promise<PopulatedTransaction>;

    setNftCollection(
      nftToken_: PromiseOrValue<string>,
      overrides?: Overrides & {from?: PromiseOrValue<string>}
    ): Promise<PopulatedTransaction>;

    setUsdcToken(
      usdcToken_: PromiseOrValue<string>,
      overrides?: Overrides & {from?: PromiseOrValue<string>}
    ): Promise<PopulatedTransaction>;

    setWethToken(
      wethToken_: PromiseOrValue<string>,
      overrides?: Overrides & {from?: PromiseOrValue<string>}
    ): Promise<PopulatedTransaction>;

    usdcBuyPrice(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    usdcToken(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    wethBuyPrice(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    wethToken(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    withdrawAllEth(
      to_: PromiseOrValue<string>,
      overrides?: Overrides & {from?: PromiseOrValue<string>}
    ): Promise<PopulatedTransaction>;

    withdrawAllUsdc(
      to_: PromiseOrValue<string>,
      overrides?: Overrides & {from?: PromiseOrValue<string>}
    ): Promise<PopulatedTransaction>;
  };
}
